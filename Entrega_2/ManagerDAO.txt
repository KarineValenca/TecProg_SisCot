** *Archive Name: ManagerDAO.java
----------------------------------
* Attribute Name: connection
* Attribute Description: This attribute is an instantiates the connection class.

* Attribute Name: sql
* Attribute Description: This attribute is an sql string to pass the query to database.

* Attribute Name: wasAdd
* Attribute Description: This boolean attribute is used to verify if a manager as added to the database.

* Attribute Name: statement
* Attribute Description: This attribute if PreparedStatement type and it is used to used to precompiled and stored PreparedStatemente object. It is util when you want used efficiently execute a statement multiple lines.

* Attribute Name: listManagers
* Attribute Description: This attribute is an arraylist of Manager type ant it is used to list all managers.

* Attribute Name: rs
* Attribute Description: This attribute is a ResultSet type and it is used to getter methods for retrieving columns values from the current row.

* Attribute Name: manager
* Attribute Description: This attribute is instance of Manager to be inserted in the database.

* Attribute Name: managerUsername
* Attribute Description: Is the type "String". This string gets the user name of manager from the view to be deleted in the database.

* Attribute Name: wasDeleted
* Attribute Description: This boolean attribute is used to verify if a manager as deleted to the database.

* Attribute Name: wasUpdated
* Attribute Description: This boolean attribute is used to verify if a manager as updated to the database.

* Attribute Name: usernameToUpdate
* Attribute Description: Is the type "String". This string gets the user name of manager to update from the view.

------------------------------
* Method Name: managerDAO
* Method Description: This method is used to connection in database.

* Method Name: insertManager
* Method Description: This method is used to insert a manager at the database, it returns a boolean that returns true if the manager was added.

* Method Name: listManagers
* Method Description: This method is responsible for bringing a list managers of database.

* Method Name: deleteManager
* Method Description: This method is used to delete a manager at the database, it returns a boolean that returns true if the manager was deleted.

* Method Name: updateManager
* Method Description: This method is used to update a manager at the database, it returns a boolean that returns true if the manager was updated.
------------------------------
* Class Name: ManagerDAO
* Class Description: This class is used to do all actions in the database relate to manager: insert, delete, update or list a manager.

